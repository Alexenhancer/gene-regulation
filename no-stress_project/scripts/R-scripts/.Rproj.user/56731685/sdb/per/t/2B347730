{
    "contents" : "---\ntitle: \"Exploration of a RNA-seq count table\"\nauthor: \"Jeanne Cheneby, Justine Long & Jacques van Helden\"\ndate: \"30 June 2015\"\noutput:\n  html_document:\n    highlight: tango\n    theme: cerulean\n    toc: yes\n    toc_depth: 5\n  pdf_document:\n    highlight: zenburn\n    toc: yes\n    toc_depth: 5\n  word_document: default\n---\n\n\n```{r setup, include=FALSE}\n## Set global options for R chunks\nknitr::opts_chunk$set(eval=TRUE, cache=FALSE, echo=FALSE)\n\n\n## Load required librarires\nlibrary(\"edgeR\")\nlibrary(\"limma\")\nlibrary(\"xtable\")\nlibrary(\"knitr\")\n\n## Define colors for the plots\ncolors.per.condition <- c(\"N\" = \"#66BBFF\",\n                          \"S\" = \"#BB8800\",\n                          \"NN\" = \"#FF00BB\",\n                          \"SN\" = \"#FFBB00\"\n                          )\n\n\n```\n\n\n```{r data_loading}\n## Set main directory\ndir.main <- \"~/no-stress_project\"\nsetwd(dir.main) \n\n## Temporary: set up manually the files and folder.\n## We will later improve this by reading the config file from arguments (argv) \nsource(\"data/1258-BRM/results/N_VS_S_bowtie2_mm1_sorted_name_params.R\")\n\n## Create a specific result directory for this differential analysis\ndir.results <- file.path(dir.main, \"results\", \"DEG\", paste(sep=\"\", cond1, \"_vs_\", cond2))\ndir.create(path = dir.results, showWarnings = FALSE, recursive = TRUE)\ndir.figures <- file.path(dir.results, \"figures\")\ndir.create(path = dir.figures, showWarnings = FALSE, recursive = TRUE)\n\n# Read data from counts files\ncounts <- readDGE(counts.f)$counts\n\n# Remove summary lines from HTseq files\n#noint <- rownames(counts) %in% c(\"no_feature\",\"ambiguous\",\"too_low_aQual\", \"not_aligned\",\"alignment_not_unique\")\ninfo.rows <- rownames(counts) %in% grep(rownames(counts),\n                                        pattern = \"__\", \n                                        value = TRUE)\n\n# Remove all features that have less than 1 reads per millions of reads\ncpms <- cpm(counts)                               ## Counts per million reads\n\n## Only keep genes detected in at least n.rep samples, where n.rep is the number of replicates\nkeep <- (rowSums(cpms > 1) >= n.rep) & !info.rows   \ncounts <- counts[keep,]\n\n# Preparation of tables\ncolnames(counts) <- sample.names\n\n\n```\n\n----------------------------------------------------\n\n# TO CHECK\n\n- read counting: does the counting included non-coding genes (rRNA, tRNA, miscellaneous features, ...) ?\n\n----------------------------------------------------\n\n# TO DO\n\n1. build a single table with counts in all samples (all conditions). \n    This table will be used for the first steps (everything that precedes differential analysis)\n\n2. obtain an annotation table from the gtf or gff file, to know which ID  correspond to which gene type (coding, ribosomial, tRNA, ...) + the common name + description + coordinates + ...\n\n- compare the sum of gene counts per sample with the initial library sizes\n\n- compare with results from RockHopper: do we obtain more or less the same numbers ?\n\n- Compute the classical normalized statistics\n\n    - CPM\n        - between-replicate comparisons in log\n        - compute mean and median CPM per condition\n        \n    - RPKM\n        - between-replicate comparisons in log\n        - compute mean and median RPKM per condition\n        \n    - princomp  to generate a PCA plot with one dot per sample, showing their relative distance\n    \n- Between-conditions comparisons\n    - MA plots from counts, CPM, RPKM\n          transform 0 values to 0.1\n          X: mean log2 level (log2(sample1) + log2(sample2))/2\n            Y: log-ration log2(sample2) - log2(sample1)\n\n\n----------------------------------------------------\n\n# Introduction\n\nThis document explores a transcriptome table obtained by counting reads per genes in RNA-seq samples.\n\n\n----------------------------------------------------\n\n# Processing\n\n\n## Counting\n\nThe counting of reads per genes was done with the *HTSeq* tool. \n\nWe need to check if the results contain also non-coding genes. With RockHopper (java tool) we noticed that ~80% of the reads map on rRNA genes, despite the fact that the samples were ribodepleted before analysis.\n\n## Filtering\n\nThe original count table was filtered to discard \"undetected genes\". \nThe criterion was to keep only the genes having a non-null count in at least `r n.rep` samples.\n\n\n# Exploration of the counts\n\n## Summary statistics about gene-based read counts per libraries\n\nThe Table below shows some summary statistics of reads per genes in the different libraries. \n\n```{r stats_per_sample}\n## The count table must have been loaded prior to the execution of this script\nstats.per.sample <- data.frame(\n  min = apply(counts, 2, min),             ## Minimal count number (percentile 0)\n  p05 = apply(counts, 2, quantile, 0.05),  ## 5th percentile\n  Q1 = apply(counts, 2, quantile, 0.25),   ## 1st quartile (percentile 25)\n  median = apply(counts, 2, median),       ## Median (percentile 50)\n  Q3 = apply(counts, 2, quantile, 0.75),   ## Third quartile (percentile 75)\n  p95 = apply(counts, 2, quantile, 0.95),  ## Percentile 95\n  max = apply(counts, 2, max),             ## Maximum (percentile 100)\n  sum = apply(counts, 2, sum)              ## Sum of counts\n  )\n\nstats.per.sample$relative.size <- stats.per.sample$sum / min(stats.per.sample$sum)\nstats.per.sample$condition <- sample.condition\n  \nkable(stats.per.sample, format = \"markdown\", digits=2)\n```\n\n\nAfter read mapping, the libraries span a wide range of sizes, varying by a factor ~`r round(max(stats.per.sample$relative.size))`\n(from $`r sprintf(\"%.2e\", min(stats.per.sample$sum))`$\nto from $`r sprintf(\"%.2e\", max(stats.per.sample$sum))`$).\n\n\n## Between-replicate comparisons\n\nEach experiment was led in 3 biological replicates. \n\nThe figure below shows the comparison between replicates for each culture condition. \n\n```{r fig_between-replicates_XYplots, fig.width=12, fig.height=8}\n\npar(mfrow=c(2,3))\nfor (cond in conditions) {\n  samples <- sample.names[sample.condition == cond]\n  plot(counts[, c(samples[1], samples[2])], \n       xlab=paste(samples[1], \", count sum =\", stats.per.sample[samples[1],\"sum\"]),\n       ylab=paste(samples[2], \", count sum =\", stats.per.sample[samples[2],\"sum\"]),\n       panel.first=grid(), col=colors.per.condition[cond]\n       )\n#   abline(v=stats.per.sample[samples[1],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n#   abline(h=stats.per.sample[samples[2],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n\n  plot(counts[, c(samples[1], samples[3])], \n       xlab=paste(samples[1], \", count sum =\", stats.per.sample[samples[1],\"sum\"]),\n       ylab=paste(samples[3], \", count sum =\", stats.per.sample[samples[3],\"sum\"]),\n       panel.first=grid(), col=colors.per.condition[cond]\n       )\n#   abline(v=stats.per.sample[samples[1],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n#   abline(h=stats.per.sample[samples[3],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n\n  plot(counts[, c(samples[2], samples[3])], \n       xlab=paste(samples[2], \", count sum =\", stats.per.sample[samples[2],\"sum\"]),\n       ylab=paste(samples[3], \", count sum =\", stats.per.sample[samples[3],\"sum\"]),\n       panel.first=grid(), col=colors.per.condition[cond]\n       )\n#   abline(v=stats.per.sample[samples[2],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n#   abline(h=stats.per.sample[samples[3],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n}\npar(mfrow=c(1,1))\n\n```\n\n\nA striking observation is the presence, for each sample, of one or a few gene(s) with a very high number of counts. \nThis probably corresponds to the ribosomal genes (***We will check this***).\n\nIn order to better highlight the genes with moderate or low counts, we plot the same between-replicate comparisons on logarithmic scales. On each plot, solid lines indicate the median and dashed lines the first and third quantiles, respectively.\n\n```{r fig_between-replicates_XYplots_logXY, fig.width=12, fig.height=8}\n\npar(mfrow=c(2,3))\nfor (cond in conditions) {\n  samples <- sample.names[sample.condition == cond]\n  plot(counts[, c(samples[1], samples[2])], \n       xlab=paste(samples[1], \", count sum =\", stats.per.sample[samples[1],\"sum\"]),\n       ylab=paste(samples[2], \", count sum =\", stats.per.sample[samples[2],\"sum\"]),\n       panel.first=grid(), col=colors.per.condition[cond], log=\"xy\"\n       )\n  abline(v=stats.per.sample[samples[1],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n  abline(h=stats.per.sample[samples[2],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n  \n  plot(counts[, c(samples[1], samples[3])], \n       xlab=paste(samples[1], \", count sum =\", stats.per.sample[samples[1],\"sum\"]),\n       ylab=paste(samples[3], \", count sum =\", stats.per.sample[samples[3],\"sum\"]),\n       panel.first=grid(), col=colors.per.condition[cond], log=\"xy\"\n       )\n  abline(v=stats.per.sample[samples[1],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n  abline(h=stats.per.sample[samples[3],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n\n  plot(counts[, c(samples[2], samples[3])], \n       xlab=paste(samples[2], \", count sum =\", stats.per.sample[samples[2],\"sum\"]),\n       ylab=paste(samples[3], \", count sum =\", stats.per.sample[samples[3],\"sum\"]),\n       panel.first=grid(), col=colors.per.condition[cond], log=\"xy\"\n       )\n  abline(v=stats.per.sample[samples[2],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n  abline(h=stats.per.sample[samples[3],c(\"p05\", \"Q1\", \"median\", \"Q3\", \"p95\")], lty=c(\"dotted\", \"dashed\", \"solid\", \"dashed\", \"dotted\"))\n}\npar(mfrow=c(1,1))\n```\n\n\n\n",
    "created" : 1435701200592.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3174876872",
    "id" : "2B347730",
    "lastKnownWriteTime" : 1435739803,
    "path" : "~/Documents/research/Desulfovibrio_NO_stress/no-stress_project/reports/RNA-seq_count_table_exploration.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}