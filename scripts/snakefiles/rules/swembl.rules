"""
    =========================
    Definition of SWEMBL rule
    =========================
"""
# input:expand(CHIP_PEAK_DIR + "/{gsm_treatment}_vs_{gsm_control}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_swembl_R{swembl_r}.fasta", \
#     zip, \
#     gsm_treatment = list_treatment_swembl, \
#     gsm_control =  list_control_swembl, \
#     swembl_r = list_swembl_r)

rule swembl:
    """Peak-calling with SWEMBL.
    """
    input:treatment = CHIP_READ_DIR + "/{gsm_treatment}/{gsm_treatment}_{aligneur}_sorted.bed", \
          control =  CHIP_READ_DIR + "/{gsm_control}/{gsm_control}_{aligneur}_sorted.bed"
    params: qsub = QSUB_PARAM + " -q short -e {peak_dir}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}swembl_qsub.err -o {peak_dir}/{gsm_treatment}_vs_{gsm_control}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_swembl_R{swembl_r}swembl_qsub.out"
    log: "{peak_dir}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}.log"
    benchmark: "{peak_dir}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}_benchmark.json"
    output: peaks_swembl = "{peak_dir}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}.swembl", \
            peaks_bed = "{peak_dir}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}.bed", \
            peak_len="{peak_dir}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}/{gsm_treatment}_vs_{gsm_control}_{aligneur}_swembl_R{swembl_r}_peaklen.tab"  
    shell: "SWEMBL -i {input.treatment} -r {input.control} -B -R {wildcards.swembl_r} -o {output.peaks_swembl} 2> {log} ; \
convert-features -from swembl -to bed -i {output.peaks_swembl} -o {output.peaks_bed}; \
sequence-lengths -i {output.peaks_bed} -in_format bed | classfreq -ci 10 -v 1 -o {output.peak_len}"