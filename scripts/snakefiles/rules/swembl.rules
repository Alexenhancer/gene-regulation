"""Peak-calling with SWEMBL.

Beware: for SWEMBL the peaks MUST be sorted by position. If not,
SWEMBL runs indefinitely.

Usage example:
    PEAKCALLER = "swembl-R" + config["swembl"]["R"]
    PEAKCALLING=expand(expand(PEAKS_DIR + "{treat}_vs_{control}/{{peakcaller}}/{treat}_vs_{control}_{{aligner}}_{{peakcaller}}", zip, treat=TREATMENT, control=CONTROL), peakcaller=PEAKCALLER, aligner=ALIGNER)
    PEAKS = expand("{peakcalling}.bed", peakcalling=PEAKCALLING)


Required parameters:
    config["qsub"]

Optional parameters:
    config["swembl"]["x"]
    config["swembl"]["R"]

 Contributors: 
       Claire Rioualen, Lucie Khamvongsa
"""

# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

if not "swembl" in config.keys():
    config["swembl"] = {}

if not "R" in config["swembl"].keys():
    config["swembl"]["R"] = "0"

if not "x" in config["swembl"].keys():
    config["swembl"]["x"] = "1"

# Define paths
if not "samples" in config["dir"].keys():
    config["dir"]["samples"] = config["dir"]["results"]

if not "peaks" in config["dir"].keys():
    config["dir"]["peaks"] = config["dir"]["results"]

suffix = "swembl-R" + config["swembl"]["R"]                                     # check consistency with the list of peak-callers in the workflow file


rule swembl:
    input:
        treatment = config["dir"]["samples"] + "{treatment}/{treatment}{preprocess,.*}_sorted_pos.bed", \
        control=config["dir"]["samples"] + "{control}/{control}{preprocess,.*}_sorted_pos.bed"
    output:
        peaks_swembl = config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + ".swembl", \
        peaks_bed = config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + ".bed", \
#        peak_len ="{result_dir}/{treatment}_vs_{control}/swembl-R{R}/{treatment}_vs_{control}_{aligner}_swembl-R{R}_peaklen.tab"
    params:
        R =  config["swembl"]["R"], \
        x = config["swembl"]["x"], \
        compa_name = "{treatment}_vs_{control}", \
        qsub = config["qsub"] \
          + " -e " + config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + "_qsub.err" \
          + " -o " + config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + "_qsub.out"
    log: config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + ".log"
    benchmark: config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + "_benchmark.json"
    shell: """
(SWEMBL -i {input.treatment} -r {input.control} -B -R {params.R} -x {params.x} -o {output.peaks_swembl}; \
grep -v '^#' {output.peaks_swembl} \
  | awk -F'\t' '$1 != "Region" || $2 != "Start pos." {{print $1"\t"$2"\t"$3"\t{params.compa_name}_SWEMBL\t"$7"\t+"}}'> {output.peaks_bed}
) &> {log}
"""

