# Check if each required parameter has been defined in the JSON
# configuration file, otherwise use default values

if not "swembl" in config.keys():
    config["swembl"] = {}

if not "R" in config["swembl"].keys():
    config["swembl"]["R"] = "0.01"

if not "x" in config["swembl"].keys():
    config["swembl"]["x"] = "1.2"


rule swembl:
    """Peak-calling with SWEMBL.

    Beware: for SWEMBL the peaks MUST be sorted by position. If not,
    SWEMBL runs indefinitely.

    """
    input:	treatment = "{result_dir}/{treatment}/{treatment}_{aligner}_sorted_pos.bed", \
		control =  "{result_dir}/{control}/{control}_{aligner}_sorted_pos.bed"
    params:	swembl_r =  config["swembl"]["R"], \
		x = config["swembl"]["x"], \
		qsub = config["qsub"]  \
		+ " -q long -e {result_dir}/{treatment}_vs_{control}/swembl-R" + config["swembl"]["R"] + "/{treatment}_vs_{control}_{aligner}_swembl-R" + config["swembl"]["R"] + "_qsub.err" \
		+ " -o {result_dir}/{treatment}_vs_{control}/swembl-R" + config["swembl"]["R"] + "/{treatment}_vs_{control}_{aligner}_swembl-R" + config["swembl"]["R"] + "_qsub.out" 
    log: "{result_dir}/{treatment}_vs_{control}/swembl-R" + config["swembl"]["R"] + "/{treatment}_vs_{control}_{aligner}_swembl-R" + config["swembl"]["R"] + ".log"
    benchmark: "{result_dir}/{treatment}_vs_{control}/swembl-R" + config["swembl"]["R"] + "/{treatment}_vs_{control}_{aligner}_swembl-R" + config["swembl"]["R"] + "_benchmark.json"
    output:	peaks_swembl = "{result_dir}/{treatment}_vs_{control}/swembl-R" + config["swembl"]["R"] + "/{treatment}_vs_{control}_{aligner}_swembl-R" + config["swembl"]["R"] + ".swembl", \
		peaks_bed = "{result_dir}/{treatment}_vs_{control}/swembl-R" + config["swembl"]["R"] + "/{treatment}_vs_{control}_{aligner}_swembl-R" + config["swembl"]["R"] + ".bed", \
		peak_len ="{result_dir}/{treatment}_vs_{control}/swembl-R" + config["swembl"]["R"] + "/{treatment}_vs_{control}_{aligner}_swembl-R" + config["swembl"]["R"] + "_peaklen.tab"  
    shell: "(SWEMBL -i {input.treatment} -r {input.control} -B -R {params.swembl_r} -x {params.x} -o {output.peaks_swembl}; \
convert-features -from swembl -to bed -i {output.peaks_swembl} -o {output.peaks_bed}; \
sequence-lengths -i {output.peaks_bed} -in_format bed | classfreq -ci 10 -v 1 -o {output.peak_len}) &> {log} "

