# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

if not "size" in config["genome"].keys():
    sys.exit("The parameter genome size must be defined in the config file")

if not "macs14" in config.keys():
    config["macs14"] = {}

if not "pval" in config["macs14"].keys():
    config["macs14"]["pval"] = "0.00001"

if not "mfold" in config["macs14"].keys():
    config["macs14"]["mfold"] = "10,30"

if not "bandwidth" in config["macs14"].keys():
    config["macs14"]["bandwidth"] = "300"

if not "keep_dup" in config["macs14"].keys():
    config["macs14"]["keep_dup"] = "auto"

if not "other_options" in config["macs14"].keys():
    config["macs14"]["other_options"] = ""

# Define paths
if not "samples" in config["dir"].keys():
    config["dir"]["samples"] = config["dir"]["results"]

if not "peaks" in config["dir"].keys():
    config["dir"]["peaks"] = config["dir"]["results"]

suffix = "macs14-pval" + config["macs14"]["pval"]

# Rule
rule macs14:
    """Peak-calling with macs14.
    Input: bed (others supported)
    Output: bed

    Required parameters:
        config["genome"]["size"]
        config["qsub"]

    Optional parameters:
        config["macs14"]["pval"]
        config["macs14"]["keep_dup"]
        config["macs14"]["bandwidth"]
        config["macs14"]["mfold"]
        config["macs14"]["other_options"]

    Contributors: 
        Claire Rioualen, Lucie Khamvongsa
    """
    input:
        treatment = config["dir"]["samples"] + "/{treatment}/{treatment}{preprocess,.*}_sorted_pos.bed",
        control=config["dir"]["samples"] + "/{control}/{control}{preprocess,.*}_sorted_pos.bed"
    output:
        peaks_bed = config["dir"]["peaks"] + "/{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + ".bed"
    params:
        outdir = config["dir"]["peaks"] + "/{treatment}_vs_{control}/" + suffix,
        name = "{treatment}_vs_{control}{preprocess,.*}_" + suffix,
        pval = config["macs14"]["pval"],
        keep_dup = config["macs14"]["keep_dup"],
        mfold = config["macs14"]["mfold"],
        bandwidth = config["macs14"]["bandwidth"],
        other_options = config["macs14"]["other_options"],
        genome_size = config["genome"]["size"],
        qsub=config["qsub"] \
          + " -e " + config["dir"]["peaks"] + "/{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + "_qsub.err" \
          + " -o " + config["dir"]["peaks"] + "/{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + "_qsub.out"
    log: config["dir"]["peaks"] + "/{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + ".log"
    benchmark: config["dir"]["peaks"] + "/{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess,.*}_" + suffix + "_benchmark.json"
    shell: """
(mkdir -p {params.outdir}
#cd {params.outdir}
macs -t {input.treatment} -c {input.control} -f BED -g {params.genome_size} -m {params.mfold} --pvalue {params.pval} --keep-dup {params.keep_dup} --outdir {params.outdir} -n {params.name} --bw {params.bandwidth} {params.other_options}
mv {params.outdir}/{params.name}_peaks.bed {params.outdir}/{params.name}.bed ;
#mv {params.name}* {params.outdir} 
) &> {log}
"""

