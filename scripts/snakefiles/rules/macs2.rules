"""Peak-calling with MACS2.
Input: sam, bam, bed... automatically detected by macs' callpeak algorithm. Bed format was used here. 
Output: bed

Usage example: 
    PEAKCALLER= "macs2-qval" + config["macs2"]["qval"]
    PEAKCALLING=expand(expand(PEAKS_DIR + "{treat}_vs_{control}/{{peakcaller}}/{treat}_vs_{control}_{{aligner}}_{{peakcaller}}", zip, treat=TREATMENT, control=CONTROL), peakcaller=PEAKCALLER, aligner=ALIGNER)
    PEAKS = expand("{peakcalling}.bed", peakcalling=PEAKCALLING)
        
Required parameters:
    config["genome"]["size"]
    config["qsub"]

Optional parameters:
    config["macs2"]["qval"]
    config["macs2"]["keep_dup"]
    config["macs2"]["band_width"]
    config["macs2"]["mfold_min"]
    config["macs2"]["mfold_max"]
    config["macs2"]["other_options"]
    config["macs2"]["type"]

Contributors: 
    Claire Rioualen, Lucie Khamvongsa
"""

# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

if not "size" in config["genome"].keys():
    sys.exit("The parameter genome size must be defined in the config file")

if not "macs2" in config.keys():
    config["macs2"] = {}

if not "qval" in config["macs2"].keys():
    config["macs2"]["qval"] = "0.05"

if not "keep_dup" in config["macs2"].keys():
    config["macs2"]["keep_dup"] = "1"

if not "band_width" in config["macs2"].keys():
    config["macs2"]["band_width"] = "300"

if not "mfold_min" in config["macs2"].keys():
    config["macs2"]["mfold_min"] = "5"

if not "mfold_max" in config["macs2"].keys():
    config["macs2"]["mfold_max"] = "50"

if not "other_options" in config["macs2"].keys():
    config["macs2"]["other_options"] = ""

if not "type" in config["macs2"].keys():
    config["macs2"]["type"] = "narrow"                                          #TODO choice narrow/broad

# Define paths
if not "samples" in config["dir"].keys():
    config["dir"]["samples"] = config["dir"]["results"]

if not "peaks" in config["dir"].keys():
    config["dir"]["peaks"] = config["dir"]["results"]

suffix = "macs2-qval" + config["macs2"]["qval"]                                 # check consistency with the list of peak-callers in the workflow file

rule macs2:
    input:
        treatment = config["dir"]["samples"] + "{treatment}/{treatment}{preprocess}_sorted_pos.bed", \
        control=config["dir"]["samples"] + "{control}/{control}{preprocess}_sorted_pos.bed"
    output:
        peaks = config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess}_" + suffix + "_peaks." + config["macs2"]["type"] + "Peak", \
        peaks_bed = config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess}_" + suffix + ".bed", \
#        peak_len = config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess}_" + suffix + "_peaklen.tab"#, \
    params:
        outdir = config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix, \
        name = "{treatment}_vs_{control}{preprocess}_" + suffix, \
        qval = config["macs2"]["qval"], \
        keep_dup = config["macs2"]["keep_dup"], \
        band_width = config["macs2"]["band_width"], \
        mfold_min = config["macs2"]["mfold_min"], \
        mfold_max = config["macs2"]["mfold_max"], \
        other_options = config["macs2"]["other_options"], \
        genome_size = config["genome"]["size"], \
        qsub=config["qsub"] \
          + " -e " + config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess}_" + suffix + "_qsub.err" \
          + " -o " + config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess}_" + suffix + "_qsub.out"
    log: config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess}_" + suffix + ".log"
    benchmark: config["dir"]["peaks"] + "{treatment}_vs_{control}/" + suffix + "/{treatment}_vs_{control}{preprocess}_" + suffix + "_benchmark.json"
    shell: """
(macs2 \
callpeak -t {input.treatment} -c {input.control} --gsize {params.genome_size} \
--qvalue {params.qval} \
--keep-dup {params.keep_dup} \
--bdg \
--bw {params.band_width} \
--mfold {params.mfold_min} {params.mfold_max} \
--outdir {params.outdir} --name {params.name} \
{params.other_options} ; \
cp {output.peaks} {output.peaks_bed}) &> {log}
"""
# sequence-lengths -i {output.peaks_bed} -in_format bed | classfreq -ci 10 -v 1 -o {output.peak_len}
