
# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

if not "fasta_file" in config["genome"].keys():
    sys.exit("Fasta file must be defined in the config file")

if not "genome" in config["dir"].keys():
    sys.exit("Genome dir must be defined in the 'dir' section of the config file")

# Define paths
genome_dir = config["dir"]["genome"] + "/"
genome_file = genome_dir + config["genome"]["fasta_file"]

chrom_size = re.sub('\.fa$', '', genome_file) + ".genome"

# Rule
rule genome_coverage_bedgraph:
    """Compute genome coverage from a bam-formatted file with aligned
    reads.  The coverage file is in bedgraph format (with extension
    .bedgraph), which can be loaded in the genome viewer IGV. 

    Note however that IGV issues a warning when bedgraph files are
    given in input, and recommends to use the tdf format instead. We
    implemented hereafter rules to convert bedgraph to tdf.

    Required parameters:
        config["qsub"]
        config["dir"]["genome"]
        config["genome"]["fasta_file"]

    Contributors: Jacques van Helden, Claire Rioualen
    """
    input: reads = "{reads}_sorted_pos.bam", chrom_size = chrom_size
    output: bedg = "{reads}.bedgraph"
    params: qsub = config["qsub"] + " -e {reads}_genomecov_bedgraph_qsub.err -o {reads}_genomecov_bedgraph_qsub.out"
    log:  "{reads}_genomecov_bedgraph.log"
    benchmark:  "{reads}_genomecov_bedgraph_benchmark.json"
    shell: "bedtools genomecov -bg -ibam {input.reads} -g {input.chrom_size} > {output.bedg} 2> {log}" 
