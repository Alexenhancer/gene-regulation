"""This file regroups snakemake targets of general utility, which may
   be used at different steps of a workflow.

"""

ruleorder: sort_bam_by_pos > sam2bam
ruleorder: sort_bam_by_name > sam2bam

rule sam2bam:
    """
    Convert reads from SAM (sequence alignment map) to BAM (binary
    alignment map) format.

    """
    input: sam="{reads}.sam"
    output: bam="{reads}.bam"
    log: "{reads}_sam2bam.log"
    benchmark: "{reads}_sam2bam_benchmark.json"
    params: qsub = config["qsub"] + " -e {reads}_sam2bam_qsub.err -o {reads}_sam2bam_qsub.out"
    shell: "samtools view -b -S {input.sam} > {output.bam} 2> {log}"

"""
    =======================================
    Definition of the sorting rule bam file
    =======================================
"""
    
rule sort_bam_by_pos:
    """
    Sort aligned reads (in bam format) by positions.
    """
    input: "{aligned_reads}.bam"
    output: "{aligned_reads}_sorted_pos.bam"
    log: "{aligned_reads}_sorted_pos.log"
    benchmark: "{aligned_reads}_sorted_pos_benchmark.json"
    params: prefix = "{aligned_reads}_sorted_pos", \
            qsub = config["qsub"] + " -q long -e {aligned_reads}_sorted_pos_qsub.err -o {aligned_reads}_sorted_pos_qsub.out"
    shell:"samtools sort  {input} {params.prefix} 2> {log}; samtools index {output} 2>> {log}"
    
rule sort_bam_by_name:
    """
    Sort aligned reads (in bam format) by name.
    """
    input: "{aligned_reads}.bam"
    output: "{aligned_reads}_sorted_name.bam"
    log: "{aligned_reads}_sorted_name.log"
    benchmark: "{aligned_reads}_sorted_name_benchmark.json"
    params: prefix = "{aligned_reads}_sorted_name", \
            qsub = config["qsub"] + " -q long -e {aligned_reads}_sorted_name_qsub.err -o {aligned_reads}_sorted_name_qsub.out"
    shell:"samtools sort -n {input} {params.prefix} 2> {log}; samtools index {output} 2>> {log}"
