rule count:
    """Count reads per gene in a bam file using htseq-count.
    """
    input: "{reads}_sorted_" + config["htseq"]["order"] + ".bam"
    output: "{reads}_sorted_" + config["htseq"]["order"] + "_count.txt"
    log: "{reads}_sorted_" + config["htseq"]["order"] + "_count.log"
    benchmark: "{reads}_sorted_" + config["htseq"]["order"] + "_count_benchmark.json"
    params: ht_type = config["htseq"]["ht_type"] , \
            order = config["htseq"]["order"], \
            stranded = config["htseq"]["stranded"], \
            minaqual = config["htseq"]["minaqual"], \
            idattr = config["htseq"]["id_attr"], \
            mode = config["htseq"]["mode"], \
            gff_file = config["htseq"]["gff_file"], \
            qsub = config["qsub"] + " -q long" \
            + " -e {reads}_sorted_" + config["htseq"]["order"] + "_count_qsub.err" \
            + " -o {reads}_sorted_" + config["htseq"]["order"] + "_count_qsub.out", \
            options = config["htseq"]["other_options"]
    # message: """--- Counting."""
    shell: "htseq-count --format {params.ht_type} --order {params.order} --stranded {params.stranded} --minaqual {params.minaqual} --idattr {params.idattr} --mode {params.mode} {input} {params.gff_file} {params.options}> {output} 2> log"

