"""Assign sequence reads to genomic features with the R-package
   subread

   This rule excecutes the counting step of RNA-Seq analysis.

   The program featureCounts requires two files :
   -the Sam or Bam file containing mapping reads
   -the annotation file

   The featureCounts function calls the tool featureCounts.

   Reference: Liao Y, Smyth GK and Shi W (2014). featureCounts: an
   efficient general purpose program for assigning sequence reads to
   genomic features.  Bioinformatics, 30(7):923-30.

"""

# Set defaults params in case they're not defined in config file. 
if not "subread" in config.keys():
    sys.exit("Subread parameters must be defined in the config file")

if not "annotations" in config["subread"].keys():
    sys.exit('The variable config["subreads"]["annotations"] must be defined in the config file ')

if not "ignore_dup" in config["subread"].keys():
    config["subread"]["ignore_dup"] = "False"


rule featurecounts:
	"""Assign sequence reads to genomic features
"""
	input: "{data_dir}/{reads}.bam"
	output: count_table = "{data_dir}/{reads}_featurecounts.tab", \
                stat_table = "{data_dir}/{reads}_featurecounts_stat.tab"
	params: annotation = config["subread"]["annotations"], \
                attr_type = config["subread"]["gtf_attrtype"], \
                feature_type = config["subread"]["feature_type"], \
                multi_overlaps = config["subread"]["multi_overlaps"], \
                paired_ends = config["subread"]["paired_ends"], \
                ignore_duplicate = config["subread"]["ignore_dup"], \
                qsub = config["qsub"] \
                + " -q short -e {data_dir}/{reads}_featurecounts_qsub.err" \
                + " -o {data_dir}/{reads}_featurecounts_qsub.out"
	log: "{data_dir}/{reads}_featurecounts.log"
	benchmark: "{data_dir}/{reads}_featurecounts_benchmark.json"
	run: 
		R("""
library("Rsubread")
count.features <- featureCounts(
                files="{input}",
                annot.ext="{params.annotation}",
                isGTFAnnotationFile=TRUE,
                GTF.featureType="{params.feature_type}",
                GTF.attrType="{params.attr_type}",
                isPairedEnd = {params.paired_ends},
                ignoreDup ={params.ignore_duplicate},
                allowMultiOverlap = {params.multi_overlaps})
write.table(count.features$counts, file="{output.count_table}", sep="\t", col.names = FALSE, quote=FALSE)
write.table(count.features$stat, file="{output.stat_table}", sep="\t", quote=FALSE)
		""")
