"""featureCounts from the subread toolkit. 

Required parameters:
    config["qsub"]
    config["dir"]["base"]

Usage: 
    Usage: featureCounts [options] -a <annotation_file> -o <output_file> input_file1 [input_file2] ... 

Authors: 
    Claire Rioualen
"""

# Set parameters
if not "qsub" in config.keys():
    sys.exit("The parameter qsub must be defined in the config file")

# Define paths
genome_gtf = config["dir"]["genome"] + config["genome"]["version"] + "/" + config["genome"]["version"] + ".gtf"

# Define input files (no global variables allowed?)
def featureCounts_inputs(wildcards):
    SAMPLE_IDS = read_table(config["metadata"]["samples"]).iloc[:,0]
    bam_files =  expand(SAMPLE_DIR + "{samples}/{samples}_{aligner}.bam", samples=SAMPLE_IDS, aligner=wildcards.aligner)
    return bam_files

rule subread_featureCounts:
    input: 
        bam = featureCounts_inputs,
        gtf = genome_gtf
    output: "{deg}/{aligner}_featureCounts.tab"
    params:
        wd = config["dir"]["base"],
        qsub = config["qsub"]\
            + " -e {deg}featureCounts_qsub.err"\
            + " -o {deg}featureCounts_qsub.out"
    log: "{deg}/{aligner}_featureCounts.log"
    benchmark: "{deg}/{aligner}_feature_counts_benchmark.json"
    run:
        shell("featureCounts -a {input.gtf} -o {output} {input.bam} &> {log}")
        R("""
            setwd("{params.wd}")
            all.counts <- read.table("{output}", header=TRUE)
            new <- all.counts[,-which(names(all.counts) %in% c("Chr", "Start", "End", "Strand", "Length"))]
            for(i in 2:length(colnames(new))){{
                colnames(new)[i] <- strsplit(colnames(new)[i], "\\\.")[[1]][3] ## NB to be changed one day...
            }}
            write.table(new, file = "{output}", sep="\t", col.names=TRUE, row.names=FALSE)
        """)





