MAKEFILE=makefile_install_dependencies

# The shell variables below will be available for 
# recipe.
export LC_ALL=C
export LANG=C


.PHONY: usr_bin add_repos essential_packages R_installation R_lib_install python_install \
	samtools_install bedtools_install \
	fastqc_install sickle_install sratoolkit_install \
	bowtie_install bowtie2_install bwa_install \
	macs1_install homer_install \
	Rstudio_install igv_install igv_tools_install

##########################
# Installation variables
##########################

USR_BIN=$(HOME)/bin
PATH_VAR=$(PATH)
#export PATH=$(PATH):$(USR_BIN)
#export PATH := $(USR_BIN):$(PATH)
#SHELL := /bin/bash
#export PATH := $(USR_BIN):$(PATH)

UBUNTU_VER_NAME="trusty"
CRAN_MIRROR="http://cran.univ-lyon1.fr"
CRAN_PACK_LIST='XML', 'bPeaks', 'caTools'
BIOC_PACK_LIST='affy', 'biomaRt', 'Rsamtools'
PUB_KEY=51716619E084DAB9 F7B8CEA6056E8E56   

###########################
# Tool versions
###########################



BEDTOOLS_VER=2.24.0
BOWTIE1_VER=1.1.1
BOWTIE2_VER=2.2.6
#BWA_VER=0.7.10
FASTQC_VER=0.11.5
IGV_VER=2.3.59
IGVTOOLS_VER=2.3.57
JAVA_VER=oracle-java9
MACS1_VER=1.4.2
NUMPY_VER=1.9.2
RPY2_VER=2.5.6
RSTUDIO_VER=0.99.473
SAMTOOLS_VER=1.3
SRATOOLKIT_VER=2.5.2
SCIPY_VER=0.16.0
SPP_VER=1.11
SWEMBL_VER=3.3.1



##########################
# ~/.bashrc config
##########################

bashrc:
	@echo "" >> /etc/bash.bashrc
	@echo 'alias ls="ls --color"' >> /etc/bash.bashrc
	@echo 'alias rm="rm -i"' >> /etc/bash.bashrc
	@echo "" >> /etc/bash.bashrc
	@echo "export LC_ALL=C" >> /etc/bash.bashrc
	@echo "export LANG=C" >> /etc/bash.bashrc
	@echo 'export force_color_prompt=yes' >> /etc/bash.bashrc
	@echo 'export LC_COLLATE=C' >> /etc/bash.bashrc
	@echo 'PATH=$$PATH:'$(USR_BIN) >> ~/.bashrc
	@echo "" >> /etc/profile
	@echo 'source /etc/bash.bashrc' >> /etc/profile




usr_bin:
	mkdir $(USR_BIN)


add_pub_key:
	for i in '$(PUB_KEY)'; do echo "PUB_KEY: $$i"; apt-key adv --recv-keys --keyserver keyserver.ubuntu.com $$i; done

add_repos: 
	@apt-get install --yes python-software-properties #installation de la commande "add-apt-repository"
	@add-apt-repository ppa:x2go/stable --yes;
	@apt-add-repository ppa:ubuntu-mate-dev/ppa --yes;
	@apt-add-repository ppa:ubuntu-mate-dev/trusty-mate --yes;
#	@add-apt-repository ppa:ravefinity-project/ppa --yes ;
	@apt-get update --yes

essential_packages:
	apt-get update
	apt-get -y install ssh rsync git graphviz
	apt-get -y install gedit-plugins								  # Basic packages that usually already come with u buntu install
	apt-get -y install zlibc zlib1g-dev										# Required by sickle, bamtools...
	apt-get -y install build-essential										 # Includes gcc compiler
	apt-get -y install libncurses5-dev libncursesw5-dev						# Required at least by samtools
	apt-get -y install libboost-dev						# might me required for spp, to be checked
	apt-get -y install gdebi								# required by rstudio install

desktop_and_x2go:
	apt-get install -y x2goserver; \
	apt-get install -y --no-install-recommends ubuntu-mate-core ubuntu-mate-desktop; \
	apt-get install -y mate-desktop-environment-extra; \
	apt-get install -y mate-notification-daemon caja-gksu caja-open-terminal; \
#	apt-get install -y ambiance-colors radiance-colors;

R_installation:
	echo "" >> /etc/apt/sources.list
	echo "deb $(CRAN_MIRROR)/bin/linux/ubuntu $(UBUNTU_VER_NAME)/" >> /etc/apt/sources.list
	apt-get update
	apt-get -y install r-base r-base-dev libcurl4-openssl-dev libxml2-dev
	echo "r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);" >> ~/.Rprofile


R_lib_install: 
	Rscript -e "pack.list <- c($(CRAN_PACK_LIST)); \
	pack <- pack.list[!(pack.list %in% installed.packages()[,'Package'])]; \
	if(length(pack)) install.packages(pack); \
	source('http://bioconductor.org/biocLite.R'); \
	pack.list <- c($(BIOC_PACK_LIST)); \
	pack <- pack.list[!(pack.list %in% installed.packages()[,'Package'])]; \
	if(length(pack)) biocLite(pack)"

Rstudio_install: 
	apt-get install -y libjpeg62
	wget --no-clobber https://download1.rstudio.org/rstudio-$(RSTUDIO_VER)-amd64.deb
	yes | PATH=/sbin:$$PATH  gdebi rstudio-$(RSTUDIO_VER)-amd64.deb
	rm -f rstudio-$(RSTUDIO_VER)-amd64.deb

python_install: 
	sudo apt-get -y install python-pip python-dev								   # ipython-notebook python-matplotlib 
	sudo apt-get -y install python3-pip python3.4-dev							   # ipython3-notebook python3-matplotlib
	sudo pip3 install "rpy2<$(RPY2_VER)"
	sudo pip3 install "numpy==$(NUMPY_VER)"
	sudo pip3 install snakemake docutils pandas
	sudo pip3 install pyyaml


java9_install:
	@echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections; \
	echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections;\
	add-apt-repository -y ppa:webupd8team/java; \
	apt-get update ;\
	apt-get -y install oracle-java9-installer ;\
	apt-get install oracle-java9-set-default


# ================================================================
#		  NGS
# ================================================================

# ----------------------------------------------------------------
# File management tools
# ----------------------------------------------------------------

samtools_install:
	cd $(USR_BIN)
	wget --no-clobber http://sourceforge.net/projects/samtools/files/samtools/$(SAMTOOLS_VER)/samtools-$(SAMTOOLS_VER).tar.bz2
	bunzip2 -f samtools-$(SAMTOOLS_VER).tar.bz2
	tar xvf samtools-$(SAMTOOLS_VER).tar
	cd samtools-$(SAMTOOLS_VER); \
	make ;\
	make install;\
	rm -rf samtools*

bedtools_install:
	cd $(USR_BIN)
	wget --no-clobber https://github.com/arq5x/bedtools2/releases/download/v$(BEDTOOLS_VER)/bedtools-$(BEDTOOLS_VER).tar.gz
	tar xvfz bedtools-$(BEDTOOLS_VER).tar.gz
	cd bedtools2; \
	make ;\
	make install;\
	rm -rf bedtools*

sratoolkit_install:
	wget -nc http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/$(SRATOOLKIT_VER)/sratoolkit.$(SRATOOLKIT_VER)-ubuntu64.tar.gz
	mv sratoolkit.$(SRATOOLKIT_VER)-ubuntu64.tar.gz $(USR_BIN)
	cd $(USR_BIN); \
	tar xvzf sratoolkit.$(SRATOOLKIT_VER)-ubuntu64.tar.gz; \
	rm sratoolkit.$(SRATOOLKIT_VER)-ubuntu64.tar.gz; \
	ln -s sratoolkit.$(SRATOOLKIT_VER)-ubuntu64/bin/fastq-dump fastq-dump; \
	ln -s sratoolkit.$(SRATOOLKIT_VER)-ubuntu64/bin/prefetch prefetch


# ----------------------------------------------------------------
# Quality assessment & trimming
# ----------------------------------------------------------------

fastqc_install:
#	@apt-get -y install fastqc
	@wget --no-clobber http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v$(FASTQC_VER).zip;\
	mv fastqc_v$(FASTQC_VER).zip $(USR_BIN); \
	cd $(USR_BIN); \
	unzip -o fastqc_v$(FASTQC_VER).zip; \
	rm fastqc_v$(FASTQC_VER).zip; \
	chmod +x FastQC/fastqc; \
	ln -s FastQC/fastqc fastqc; \

sickle_install: 
	@git clone https://github.com/najoshi/sickle.git; \
	cd sickle;\
	make; \
	mv sickle $(USR_BIN) ;\
	cd ..;\
	rm -Rf sickle

# ----------------------------------------------------------------
# Mapping tools
# ----------------------------------------------------------------

bowtie_install: 
	@wget --no-clobber http://downloads.sourceforge.net/project/bowtie-bio/bowtie/$(BOWTIE1_VER)/bowtie-$(BOWTIE1_VER)-linux-x86_64.zip;\
	mv bowtie-$(BOWTIE1_VER)-linux-x86_64.zip $(USR_BIN); \
	cd $(USR_BIN); \
	unzip bowtie-$(BOWTIE1_VER)-linux-x86_64.zip;\
	rm bowtie-$(BOWTIE1_VER)-linux-x86_64.zip;\
	mv bowtie-$(BOWTIE1_VER)/bowtie* /usr/local/bin
	rm -rf bowtie-$(BOWTIE1_VER)

bowtie2_install:
	@wget --no-clobber http://downloads.sourceforge.net/project/bowtie-bio/bowtie2/$(BOWTIE2_VER)/bowtie2-$(BOWTIE2_VER)-linux-x86_64.zip;\
	unzip bowtie2-$(BOWTIE2_VER)-linux-x86_64.zip;\
	rm bowtie2-$(BOWTIE2_VER)-linux-x86_64.zip;\
	cd bowtie2-$(BOWTIE2_VER);\
	sudo mv bowtie2* /usr/local/bin/;\
	cd ..;\
	rm -Rf bowtie2-$(BOWTIE2_VER)*

bwa_install:
	@apt-get -y install bwa
#	@wget -nc https://sourceforge.net/projects/bio-bwa/files/bwa-$(BWA_VER).tar.bz2; \




# ----------------------------------------------------------------
# Peak analysis
# ----------------------------------------------------------------

macs1_install:
	@wget --no-clobber https://github.com/downloads/taoliu/MACS/MACS-$(MACS_VER)-1.tar.gz
	@tar xvfz MACS-$(MACS_VER)-1.tar.gz 
	@cd MACS-$(MACS_VER); python setup.py install
	@rm -Rf MACS-$(MACS_VER)*

spp_install:
	@wget http://compbio.med.harvard.edu/Supplements/ChIP-seq/spp_$(SPP_VER).tar.gz
	mv spp_$(SPP_VER).tar.gz $(USR_BIN);\
	cd $(USR_BIN);\
	R CMD INSTALL spp_$(SPP_VER).tar.gz; \

macs2_install:
	sudo pip install MACS2;

swembl_install:
	cd $(USR_BIN);\
	wget "http://www.ebi.ac.uk/~swilder/SWEMBL/SWEMBL.$(SWEMBL_VER).tar.bz2"; \
	bunzip2 -f SWEMBL.$(SWEMBL_VER).tar.bz2;\
	tar xvf SWEMBL.$(SWEMBL_VER).tar;\
	rm SWEMBL.$(SWEMBL_VER).tar;\
	cd SWEMBL.$(SWEMBL_VER); \
	make ;\
#	make install;\
#	rm -rf samtools*


homer_install:
	@wget "http://homer.salk.edu/homer/configureHomer.pl"; \
	mkdir $(USR_BIN)/HOMER; \
	mv configureHomer.pl $(USR_BIN)/HOMER; \
	cd $(USR_BIN)/HOMER; \
	perl configureHomer.pl -install homer; \
	echo 'PATH=$$PATH:'$(USR_BIN)'/HOMER/bin' >> ~/.bashrc
	echo source $(HOME)/.bashrc
#	PATH=$(USR_BIN)/HOMER/bin:$$PATH
#	PATH_VAR=$(PATH_VAR):$(USR_BIN)/HOMER/bin; \
#	echo "export PATH="$(PATH_VAR)

#	@echo 'PATH=$$PATH:'$(USR_BIN) >> ~/.bashrc

# ================================================================
#		  Visualization
# ================================================================

igv_install:
	wget --no-clobber http://data.broadinstitute.org/igv/projects/downloads/IGV_$(IGV_VER).zip; \
	mv IGV_$(IGV_VER).zip $(USR_BIN);\
	cd $(USR_BIN); \
	unzip IGV_$(IGV_VER).zip;\
	rm  IGV_$(IGV_VER).zip;\
	cd IGV_$(IGV_VER);\
	ln -s $(USR_BIN)/IGV_$(IGV_VER)/igv.sh $(USR_BIN)/igv

igv_tools_install:
	wget --no-clobber http://data.broadinstitute.org/igv/projects/downloads/igvtools_$(IGVTOOLS_VER).zip ;\
	mv igvtools_$(IGVTOOLS_VER).zip $(USR_BIN);\
	cd $(USR_BIN); \
	unzip igvtools_$(IGVTOOLS_VER).zip;\
	rm igvtools_$(IGVTOOLS_VER).zip;\
	ln -s $(USR_BIN)/IGVTools/igvtools $(USR_BIN)/igvtools

all_install: usr_bin add_repos add_pub_key essential_packages R_installation R_lib_install  python_install java9_install \
	samtools_install bedtools_install sratoolkit_install \
	fastqc_install sickle_install \
	bowtie_install bowtie2_install bwa_install \
	macs1_install spp_install \
	igv_install igv_tools_install desktop_and_x2go

