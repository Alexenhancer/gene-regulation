% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/tTestPerRow.R
\name{tTestPerRow}
\alias{tTestPerRow}
\title{T-test (Student or Welch) on each row of an input table.}
\usage{
tTestPerRow(x, cl, P.threshold = NA, E.threshold = NA, FDR.threshold = NA,
  robust.est = F, verbosity = 1, volcanoPlot = FALSE,
  alternative = "two.sided", var.equal = FALSE, group.col.names = FALSE,
  m2.minus.m1 = FALSE, alpha = 0.05, ...)
}
\arguments{
\item{x}{A matrix or data frame}

\item{cl}{A vector describing class assignment (length should equal the number of columns of the data table)}

\item{...}{Additional parameters are passed to the function tTestPerRow.plotVolcano()}

\item{P.threshold=NA}{p-value threshold. If specified, the result table only contains rows passing this threshold.}

\item{E.threshold=NA}{e-value threshold. If specified, the result table only contains rows passing this threshold.}

\item{FDR.threshold=NA}{Threshold on the False Discovery Rate (FDR). If specified, the result table only contains rows passing this threshold.}

\item{robust.est=F}{Use robust estimators for central tendency and dispersion}

\item{verbosity=1}{Level of verbosity}

\item{volcanoPlot=T}{Draw a volcano plot.}

\item{alternative="two-sided"}{Alternative hypothesis for the Welch test. Supported: "two.sided" (default), "less", "greater".}

\item{var.equal=F}{Assume or nt var.equaliable. Apply Student test if true, Welch test if false.}

\item{m2.minus.m1=FALSE}{Compute the difference as (d=m2-m1) rather than (d=m1-m2).
By default we set d=m1-m2 for the sake of consistency with stats::t.test().}

\item{group.col.name}{Include group labels in the column name of the output table}

\item{alpha=0.05}{Alpha value, used to define the confidence interval width}
}
\value{
A data.frame with one row per test result, and one column per statistics.
}
\description{
Apply a t-test (Welch or Student) to each row of a multivariate
table.

The estimators of central tendency and dispersion can either be computed
with the moments (mean, standard deviation) or with robust esimators
(median, IQR).
}
\details{
First version: 2003-09
Last modification: 2015-02
}
\examples{
## Load example data set from Den Boer, 2009
library(denboer2009)
data(denboer2009.expr)     ## Load expression table
data(denboer2009.pheno)    ## Load phenotypic data
data(denboer2009.group.labels)    ## Load phenotypic data

## Print cancer types and associated group labels
print(data.frame(denboer2009.group.labels))

## Compute the number of samples per subtype of cancer (ALL)
sort(table(denboer2009.pheno$sample.labels), decreasing=TRUE)

## Create a vector with group labels per sample,
## For the Welch test we compare one group of interest (e.g. Bh)
## to all the other ones (labeled as "other").
goi <- "Bh" ## Group of interest
sample.groups <- denboer2009.pheno$sample.labels
sample.groups[sample.groups != goi] <- "other"

## Check number of samples per group
sort(table(sample.groups))

## Run Welch test on each row of the DenBoer dataset
welch.table <- tTestPerRow(x=denboer2009.expr, cl=sample.groups, var.equal=FALSE)

## Draw a volcano plot with Welch result table
tTestPerRow.plotVolcano(welch.table,
     main=paste(sep="", "Welch test : Den Boer (2009), ", goi, " vs others"),
     legend.corner = "topright")

## Run Student test on each row of the DenBoer dataset
student.table <- tTestPerRow(x=denboer2009.expr, cl=sample.groups, var.equal=TRUE)

## Draw a volcano plot with Student result table
tTestPerRow.plotVolcano(student.table,
            main=paste(sep="", "Student test : Den Boer (2009), ", goi, " vs others"),
            legend.corner="topleft")

## Draw a volcano plot with confidence interval bars for Student result table
tTestPerRow.plotVolcano(student.table,
            main=paste(sep="", "Student test : Den Boer (2009), ", goi, " vs others"),
            legend.corner="topleft", plot.ci=TRUE, alpha=0.05)

## Compare e-values from Student and Welch tests
plotPvalCompa(data.frame(
   "Student"=student.table$e.value,
   "Welch"=welch.table$e.value), score="e-value", alpha=0.05)

## Compare FDR from Student and Welch tests
plotPvalCompa(data.frame(
   "Student"=student.table$fdr,
   "Welch"=welch.table$fdr), score="FDR", alpha=0.05)

## Confusion table between Student and Welch tests
table(student.table$fdr < 0.05, welch.table$fdr < 0.05) ## Lenient threshold on FDR
table(student.table$e.value < 0.05, welch.table$e.value < 0.05) ## Lenient threshold on E-value
table(student.table$e.value < 1, welch.table$e.value < 1) ## Intermediate threshold on E-value
}
\author{
Jacques van Helden (\email{Jacques.van-Helden@univ-amu.fr})
}

